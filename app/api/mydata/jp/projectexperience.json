[
    {
      "title": "Oct 2022--Feb 2023：Kubota",
      "responsibility": "請求書印刷機能への画面の入り口を達成するために 、 ExcelとPdfの2種類のファイルをダウンロードする 。 フロントエンドとバックエンドの分離、フロントエンドはVue + Typescript、バックエンドはJava + SpringBoot。!@#1.Vue+Typescriptをベースに請求書表示・設定画面を実装。!@#2.アカウントチケットのアップロードと単一/複数ファイルのダウンロードを有効にします。!@#3.課金ビジネスサービスクラスのカプセル化に基づくIOCメカニズムの実装。"
    },
    {
      "title": "Mar 2022--Oct 2022：工数入力システム",
      "responsibility": "勤務時間システムのオリジナルのstrutsの実装を修正する：新しいシステムのvue、springboot、mybatisの実装によって。!@#1.マイクロサービスシステムのインフラを実装する：統一リクエストレスポンス、統一例外処理、URLリクエストフロー制限、システムログ、認証と認可、国際化、ステートフルフローコントロール、リンクトレースなど。!@#2.Vue3+Typescriptを使って、フロントエンドの基本フレームワークを実装する：AXIOSベースのhttpリクエスト、国際化、例外処理、ユーザー状態の維持、共通コンポーネントなど。"
    },
    {
      "title": "Jan 2021--Dec 2021：証券取引システムのアップグレードとリエンジニアリング",
      "responsibility": "strutsで実装された古いシステムをreact, thymeleaf, springbootで実装された新しいシステムにアップグレードする。!@#1.グループメンバーのフロントエンドとバックエンドのコードをレビューする。!@#2.履歴の取得と引用、投資インテリジェンス、証券の保持という画面のフロントエンドとバックエンドのビジネス機能を実現する。"
    },
    {
      "title": "Jun 2020--Dec 2020：ユーザー明細書の分散印刷システム",
      "responsibility": "1.システムの問題を調査し、解決策を提示する。!@#2.システムメモリ使用量を監視し、閾値を超えたらシステムをリブートするシェルを書く。"
    },
    {
      "title": "Apr 2019--May 2020：Springマイクロサービス・システム・アーキテクチャのインフラ開発",
      "responsibility": "1.統一されたリクエストとレスポンス、呼び出しコンテキスト、リンクトレース、統一された例外処理、国際化などの実装に参加する。"
    },
    {
      "title": "Dec 2018--Mar 2019：KFC PAY決済システムにユーザーポイント決済機能を追加",
      "responsibility": "独自の決済システムに、ユーザーポイントの低額決済機能を追加する。!@#1.業務のフローチャートや詳細設計を描く。!@#2.ユーザーのCRMシステムに減点機能を実装する。!@#3.ポイント支払い照会機能を理解する。"
    },
    {
      "title": "Aug 2018--Dec 2018：python+selenium+scrapyを使って中古住宅サイトのデータをクロールする",
      "responsibility": "中古住宅サイトの住宅データを入力条件に基づいてクロールする。!@#1.データをクロールするためのクローラーツールとしてのscrapyフレームワーク。!@#2.データベースからクエリ条件を取得し、ユーザー入力をシミュレートするためにセレニウムに渡す。!@#3. pythonのマルチスレッドクローリングで、redisをロックとして使い、クロールの繰り返しを防ぐ。"
    },
    {
      "title": "Jul 2018--Nov 2018：KFCメニューセンター・システム・オファー合併",
      "responsibility": "顧客割引ルールの変更、異なるチャネルに応じて異なる割引ルールを設定します。!@#1.チャネル変更のビジネスロジックルールとプログラムコード構造を分析し、理解する。!@#2.SQLの結合・分割、SQLの整理・結合、オファーメニュー。!@#3.ページ内のJAVASCRIPTを、変更後の業務に合わせて修正する。!@#4.ビジネスロジックを変更するためのバックエンドコードを追加し、ロジックの正しさをテストする。"
    },
    {
      "title": "Oct 2017--Jun 2018：KFC PAY決済システムが中国移動の「Habao Payment」にドッキング",
      "responsibility": "決済システムにパケット決済機能を追加する。!@#1.ワバオペイメントのURLを取得し、支払いページを表示します。!@#2. アクティブなローテーションとパッケージの支払い結果。!@#3.決済結果のMQを受注システムに送信する。"
    }
]
