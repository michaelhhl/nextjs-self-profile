import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import * as React from 'react';
import Link from 'next/link';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Drawer from '@mui/material/Drawer';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';
import Divider from '@mui/material/Divider';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemIcon from '@mui/material/ListItemIcon';
import ListItemText from '@mui/material/ListItemText';
import DashboardIcon from '@mui/icons-material/Dashboard';
import HomeIcon from '@mui/icons-material/Home';
import StarIcon from '@mui/icons-material/Star';
import ChecklistIcon from '@mui/icons-material/Checklist';
import SettingsIcon from '@mui/icons-material/Settings';
import SupportIcon from '@mui/icons-material/Support';
import LogoutIcon from '@mui/icons-material/Logout';
import ThemeRegistry from './components/ThemeRegistry/ThemeRegistry';
import { Locale, i18n } from '@/i18n-config'
import LocaleSwitcher from './components/LocaleSwitcher';
import { getLocale } from '@/get-locale';
import { AutoAwesomeMosaic, AutoAwesomeMotion, GridOn, Looks, SettingsVoice } from '@mui/icons-material';

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }))
}

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Personal Profile',
  description: 'Generated by create next app',
}

const DRAWER_WIDTH = 240;

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode
  params: { lang: Locale }
}>) {
  const dictionary = await getLocale(params.lang)

  const LINKS = [
    { text: dictionary.menu.home, href: `/${params.lang}`, icon: HomeIcon },
    { text: dictionary.menu.work_history, href: `/${params.lang}/workHistory`, icon: StarIcon },
    { text: dictionary.menu.project_experience, href: `/${params.lang}/projectExperience`, icon: ChecklistIcon },
    { text: dictionary.menu.speech, href: `/${params.lang}/speech`, icon: SettingsVoice },
    { text: dictionary.menu.java, href: `/${params.lang}/java`, icon: Looks },
    { text: dictionary.menu.nextjs, href: `/${params.lang}/nextjs`, icon: AutoAwesomeMotion },
    { text: dictionary.menu.react, href: `/${params.lang}/react`, icon: AutoAwesomeMosaic },
    { text: dictionary.menu.vue, href: `/${params.lang}/vue`, icon: GridOn },
  ];

  return (
    <html lang={params.lang}>
      <body className={inter.className}>
        <ThemeRegistry>
          <AppBar position="fixed" color='inherit' component="nav">
            <Toolbar>
              <DashboardIcon />
              <Typography variant="h5" color="text.primary" component="div" sx={{ flexGrow: 1 }}>
                {dictionary.app_title}
              </Typography>
              <LocaleSwitcher />
            </Toolbar>
          </AppBar>
          <Drawer
            sx={{
              width: DRAWER_WIDTH,
              flexShrink: 0,
              '& .MuiDrawer-paper': {
                width: DRAWER_WIDTH,
                boxSizing: 'border-box',
                top: ['48px', '56px', '64px'],
                height: 'auto',
                bottom: 0,
              },
            }}
            variant="permanent"
            anchor="left"
          >
            <Divider />
            <List>
              {LINKS.map(({ text, href, icon: Icon }) => (
                <ListItem key={href} disablePadding>
                  <ListItemButton component={Link} href={href}>
                    <ListItemIcon>
                      <Icon />
                    </ListItemIcon>
                    <ListItemText primary={text} />
                  </ListItemButton>
                </ListItem>
              ))}
            </List>
            <Divider sx={{ mt: 'auto' }} />
          </Drawer>
          <Box
            component="main"
            sx={{
              flexGrow: 1,
              bgcolor: 'background.default',
              ml: `${DRAWER_WIDTH}px`,
              mt: ['60px'],
              p: 3,
            }}
          >
            {children}
          </Box>
        </ThemeRegistry>
      </body>
    </html >
  )
}
